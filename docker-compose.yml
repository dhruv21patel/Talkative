version: '3.8'
services:
  mongodb:
    image: mongo:latest
    container_name: mongo_db
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=root@1234
    ports:
      - "27017:27017"
    volumes:
      - ./Databases/mongo_data:/data/db

  mysql_Auth:
    image: mysql:latest
    container_name: mysql_Auth
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root@1234
      MYSQL_DATABASE: Talkative       # Name of the database
#      MYSQL_USER: root               # Custom username
#      MYSQL_PASSWORD: root@1234       # Custom user password
#      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    ports:
      - "3306:3306"  # Expose MySQL on port 3306
    volumes:
      - ./Databases/mysql_Auth_data:/var/lib/mysql  # Persist MySQL data

  mysql_Users:
    image: mysql:latest
    container_name: mysql_Users
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root@1234
      MYSQL_DATABASE: Users       # Name of the database
    #      MYSQL_USER: root               # Custom username
    #      MYSQL_PASSWORD: root@1234       # Custom user password
    #      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    ports:
      - "5050:3306"  # Expose MySQL on port 3306
    volumes:
      - ./Databases/mysql_Users_data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./Redis/Cache:/data
#    environment:
#      - REDIS_PASSWORD="root@1234"  # Define a password here if needed
#    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]  # Use environment variable for password
    command: ["redis-server"]

  NGINX:
    image: alpine:latest
    container_name: Ubuntu
    ports:
      - "8080:8080"
    volumes:
      - ./Nginx:/data
    command: >
      sh -c "apt-get update && \
             apt-get install -y docker.io && \
             cp /data/nginx.conf /data/default.conf /etc/nginx/ && \
             docker build -t custom-nginx . && \
             docker run -d --name nginx-container -p 80:80 custom-nginx && \
             tail -f /dev/null"