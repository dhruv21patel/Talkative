spring.application.name=Connection-Service
server.port=8085

#logging.level.org.springframework.web.socket=DEBUG
#logging.level.org.springframework.web.socket.config=DEBUG

#grpc.server.port=9090
#grpc.server.security.enabled=false  # Set to true if using TLS

# gRPC Client Configuration for grpc-ind channel
grpc.client.grpc-ind.address=static://localhost:9090
grpc.client.grpc-ind.negotiationType=plaintext

#grpc.client.grpc-group.address=static://localhost:9091
#grpc.client.grpc-group.negotiationType=plaintext


# Discovery Server configurations
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka

#Kafka Configurations
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# MongoDb
Mongo_Database=Sessions
MongoClientUri=mongodb://localhost:27017
#logging.level.org.springframework.data.mongodb=DEBUG
#logging.level.org.mongodb.driver=DEBUG
#logging.level.org.springframework.data.mongodb.core.ReactiveMongoTemplate=DEBUG

## REDIS configuration
spring.data.redis.host=localhost
spring.data.redis.port=6380
spring.data.redis.password=root@1234
spring.data.redis.database=0
spring.data.redis.timeout=6000
spring.redis.lettuce.pool.max-active=10
spring.redis.lettuce.pool.max-idle=5
spring.redis.lettuce.pool.min-idle=1
spring.redis.lettuce.shutdown-timeout=2000


#  Defining the Datasource for SQl connections For migrations to work on Synchronous Blocking Way

# JDBC connection for Flyway (Blocking, used only for migrations) ( DATABASE  = ChatTable )
#spring.datasource.url=jdbc:postgresql://localhost:5432/chattable
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.driver-class-name=org.postgresql.Driver


# Postgres reactive data connection streams ( DATABASE  = ChatTable )
#spring.r2dbc.url = r2dbc:postgres://localhost:5432/chattable
#spring.r2dbc.username = postgres
#spring.r2dbc.password = postgres
#spring.r2dbc.initialization-mode=never
#logging.level.org.springframework.r2dbc=DEBUG


# Postgres Migration Tool (Flyway) Enable Flyway
#spring.flyway.enabled=true
#spring.flyway.baseline-on-migrate=true
#spring.flyway.clean-disabled=false
#spring.flyway.locations=classpath:db/migration
#spring.sql.init.mode=never
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true

#   Circuit Breaker
resilience4j.circuitbreaker.instances.sendMessage.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.sendMessage.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.sendMessage.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.sendMessage.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.sendMessage.wait-duration-in-open-state=5s

resilience4j.circuitbreaker.instances.sendMessage.sliding-window-size=10
resilience4j.circuitbreaker.instances.sendMessage.sliding-window-type=count_based

resilience4j.circuitbreaker.instances.sendMessage.registerHealthIndicator = true
resilience4j.circuitbreaker.instances.sendMessage.register-health-indicator = true

# Retry
# Enable retry for sendMessage
resilience4j.retry.instances.sendMessage.maxAttempts=3
resilience4j.retry.instances.sendMessage.waitDuration=20

# Exponential backoff (if needed)
resilience4j.retry.instances.sendMessage.enableExponentialBackoff=true
resilience4j.retry.instances.sendMessage.exponentialBackoffMultiplier=2

# Ignore specific exceptions (optional)
resilience4j.retry.instances.sendMessage.ignoreExceptions=java.lang.IllegalArgumentException

# Record metrics (optional, useful for monitoring)
resilience4j.retry.instances.sendMessage.metrics.enabled=true


#   Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
